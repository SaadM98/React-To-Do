{"ast":null,"code":"var _jsxFileName = \"/Users/saadmansoor/Desktop/Job/To-Do/to-do/src/components/TodoForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction TodoForm(props) {\n  _s();\n  const [input, setInput] = useState(props.edit ? props.edit.value : '');\n  const inputRef = useRef(null);\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input\n    });\n    setInput(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"todo-form\",\n    onSubmit: handleSubmit,\n    children: props.edit ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Edit Item\",\n        value: input,\n        name: \"text\",\n        className: \"todo-input\",\n        onChange: handleChange,\n        ref: inputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"todo-button\",\n        type: \"\",\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Add a To-do\",\n        value: input,\n        name: \"text\",\n        className: \"todo-input\",\n        onChange: handleChange,\n        ref: inputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"todo-button\",\n        type: \"\",\n        children: \"Add a To-Do\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoForm, \"xbvrlj5lrJII/vsr6NCUo81spDI=\");\n_c = TodoForm;\nexport default TodoForm;\nvar _c;\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"names":["React","useState","useEffect","useRef","TodoForm","props","input","setInput","edit","value","inputRef","current","focus","handleChange","e","target","handleSubmit","preventDefault","onSubmit","id","Math","floor","random","text"],"sources":["/Users/saadmansoor/Desktop/Job/To-Do/to-do/src/components/TodoForm.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\n\nfunction TodoForm(props) {\n  const [input, setInput] = useState(props.edit ? props.edit.value : '');\n\n  const inputRef = useRef(null);\n\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input\n    });\n\n    setInput(\"\");\n  };\n\n  return (\n    <form className=\"todo-form\" onSubmit={handleSubmit}>\n\n        {props.edit ? (\n        <>\n        <input\n        type=\"text\"\n        placeholder=\"Edit Item\"\n        value={input}\n        name=\"text\"\n        className=\"todo-input\"\n        onChange={handleChange}\n        ref={inputRef}\n      />\n      <button className=\"todo-button\" type=\"\">\n        Update\n      </button>\n      </>\n      ) : (\n          <>\n          <input\n        type=\"text\"\n        placeholder=\"Add a To-do\"\n        value={input}\n        name=\"text\"\n        className=\"todo-input\"\n        onChange={handleChange}\n        ref={inputRef}\n      />\n      <button className=\"todo-button\" type=\"\">\n        Add a To-Do\n      </button>\n      </>\n      )}\n\n      \n    </form>\n  );\n}\n\nexport default TodoForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC;AAAA;AAE3D,SAASC,QAAQ,CAACC,KAAK,EAAE;EAAA;EACvB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAACI,KAAK,CAACG,IAAI,GAAGH,KAAK,CAACG,IAAI,CAACC,KAAK,GAAG,EAAE,CAAC;EAEtE,MAAMC,QAAQ,GAAGP,MAAM,CAAC,IAAI,CAAC;EAE7BD,SAAS,CAAC,MAAM;IACdQ,QAAQ,CAACC,OAAO,CAACC,KAAK,EAAE;EAC1B,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAGC,CAAC,IAAI;IACxBP,QAAQ,CAACO,CAAC,CAACC,MAAM,CAACN,KAAK,CAAC;EAC1B,CAAC;EAED,MAAMO,YAAY,GAAGF,CAAC,IAAI;IACxBA,CAAC,CAACG,cAAc,EAAE;IAElBZ,KAAK,CAACa,QAAQ,CAAC;MACbC,EAAE,EAAEC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,KAAK,CAAC;MACrCC,IAAI,EAAEjB;IACR,CAAC,CAAC;IAEFC,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;EAED,oBACE;IAAM,SAAS,EAAC,WAAW;IAAC,QAAQ,EAAES,YAAa;IAAA,UAE9CX,KAAK,CAACG,IAAI,gBACX;MAAA,wBACA;QACA,IAAI,EAAC,MAAM;QACX,WAAW,EAAC,WAAW;QACvB,KAAK,EAAEF,KAAM;QACb,IAAI,EAAC,MAAM;QACX,SAAS,EAAC,YAAY;QACtB,QAAQ,EAAEO,YAAa;QACvB,GAAG,EAAEH;MAAS;QAAA;QAAA;QAAA;MAAA,QACd,eACF;QAAQ,SAAS,EAAC,aAAa;QAAC,IAAI,EAAC,EAAE;QAAA,UAAC;MAExC;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA,gBACN,gBAEC;MAAA,wBACA;QACF,IAAI,EAAC,MAAM;QACX,WAAW,EAAC,aAAa;QACzB,KAAK,EAAEJ,KAAM;QACb,IAAI,EAAC,MAAM;QACX,SAAS,EAAC,YAAY;QACtB,QAAQ,EAAEO,YAAa;QACvB,GAAG,EAAEH;MAAS;QAAA;QAAA;QAAA;MAAA,QACd,eACF;QAAQ,SAAS,EAAC,aAAa;QAAC,IAAI,EAAC,EAAE;QAAA,UAAC;MAExC;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;EAER;IAAA;IAAA;IAAA;EAAA,QAGI;AAEX;AAAC,GA9DQN,QAAQ;AAAA,KAARA,QAAQ;AAgEjB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}