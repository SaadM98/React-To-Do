{"ast":null,"code":"var _jsxFileName = \"/Users/saadmansoor/Desktop/Job/To-Do/to-do/src/components/Todo.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport TodoList from \"./TodoList\";\nimport { RiCloseCircleLine } from 'react-icons/ri';\nimport { TiEdit } from 'react-icons/ti';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Todo(_ref) {\n  _s();\n  let {\n    todos,\n    completeTodo,\n    removeTodo,\n    updateTodo\n  } = _ref;\n  const [edit, setEdit] = useState({\n    id: null,\n    value: \"\"\n  });\n  const submitUpdate = value => {\n    updateTodo(edit.id, value);\n    setEdit({\n      id: null,\n      value: ''\n    });\n  };\n  if (edit.id) {\n    return /*#__PURE__*/_jsxDEV(TodoForm, {\n      edit: edit,\n      onSubmit: submitUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 14\n    }, this);\n  }\n  return todos.map((todo, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: todo.isComplete ? \"todo-row complete\" : \"todo-row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-complete\",\n      onClick: () => completeTodo(todo.id),\n      children: todo.text\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"icons\",\n      children: [/*#__PURE__*/_jsxDEV(RiCloseCircleLine, {\n        onClick: () => removeTodo(todo.id),\n        className: \"delete-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TiEdit, {\n        onClick: () => setEdit({\n          id: todo.id,\n          value: todo.text\n        }),\n        className: \"edit-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this));\n}\n_s(Todo, \"SZ7O87z9a7ANQvhgfU3v5lCwFSQ=\");\n_c = Todo;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["React","useState","TodoForm","TodoList","RiCloseCircleLine","TiEdit","Todo","todos","completeTodo","removeTodo","updateTodo","edit","setEdit","id","value","submitUpdate","map","todo","index","isComplete","text"],"sources":["/Users/saadmansoor/Desktop/Job/To-Do/to-do/src/components/Todo.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport TodoList from \"./TodoList\";\nimport {RiCloseCircleLine} from 'react-icons/ri'\nimport {TiEdit} from 'react-icons/ti'\n\nfunction Todo({todos, completeTodo, removeTodo, updateTodo}) {\n  const [edit, setEdit] = useState({\n    id: null,\n    value: \"\"\n  });\n\n  const submitUpdate = value => {\n      updateTodo(edit.id, value)\n      setEdit({\n          id: null,\n          value: ''\n      })\n  }\n\n  if (edit.id){\n      return <TodoForm edit = {edit} onSubmit={submitUpdate} />\n  }\n\n  return todos.map((todo, index) => (\n    <div\n      className={todo.isComplete ? \"todo-row complete\" : \"todo-row\"}\n      key={index}\n    >\n        <div className=\"todo-complete\" key={todo.id} onClick={() => completeTodo(todo.id)}>\n            {todo.text}\n        </div>\n        <div className=\"icons\">\n            <RiCloseCircleLine \n                onClick={() => removeTodo(todo.id)}\n                className=\"delete-icon\"\n            />\n            <TiEdit \n                onClick={() => setEdit({id: todo.id, value: todo.text})}\n                className=\"edit-icon\"\n            />\n        </div>\n\n\n    </div>\n  ));\n}\n\nexport default Todo;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAAQC,iBAAiB,QAAO,gBAAgB;AAChD,SAAQC,MAAM,QAAO,gBAAgB;AAAA;AAErC,SAASC,IAAI,OAAgD;EAAA;EAAA,IAA/C;IAACC,KAAK;IAAEC,YAAY;IAAEC,UAAU;IAAEC;EAAU,CAAC;EACzD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC;IAC/BY,EAAE,EAAE,IAAI;IACRC,KAAK,EAAE;EACT,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAGD,KAAK,IAAI;IAC1BJ,UAAU,CAACC,IAAI,CAACE,EAAE,EAAEC,KAAK,CAAC;IAC1BF,OAAO,CAAC;MACJC,EAAE,EAAE,IAAI;MACRC,KAAK,EAAE;IACX,CAAC,CAAC;EACN,CAAC;EAED,IAAIH,IAAI,CAACE,EAAE,EAAC;IACR,oBAAO,QAAC,QAAQ;MAAC,IAAI,EAAIF,IAAK;MAAC,QAAQ,EAAEI;IAAa;MAAA;MAAA;MAAA;IAAA,QAAG;EAC7D;EAEA,OAAOR,KAAK,CAACS,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC3B;IACE,SAAS,EAAED,IAAI,CAACE,UAAU,GAAG,mBAAmB,GAAG,UAAW;IAAA,wBAG5D;MAAK,SAAS,EAAC,eAAe;MAAe,OAAO,EAAE,MAAMX,YAAY,CAACS,IAAI,CAACJ,EAAE,CAAE;MAAA,UAC7EI,IAAI,CAACG;IAAI,GADsBH,IAAI,CAACJ,EAAE;MAAA;MAAA;MAAA;IAAA,QAErC,eACN;MAAK,SAAS,EAAC,OAAO;MAAA,wBAClB,QAAC,iBAAiB;QACd,OAAO,EAAE,MAAMJ,UAAU,CAACQ,IAAI,CAACJ,EAAE,CAAE;QACnC,SAAS,EAAC;MAAa;QAAA;QAAA;QAAA;MAAA,QACzB,eACF,QAAC,MAAM;QACH,OAAO,EAAE,MAAMD,OAAO,CAAC;UAACC,EAAE,EAAEI,IAAI,CAACJ,EAAE;UAAEC,KAAK,EAAEG,IAAI,CAACG;QAAI,CAAC,CAAE;QACxD,SAAS,EAAC;MAAW;QAAA;QAAA;QAAA;MAAA,QACvB;IAAA;MAAA;MAAA;MAAA;IAAA,QACA;EAAA,GAdHF,KAAK;IAAA;IAAA;IAAA;EAAA,QAkBb,CAAC;AACJ;AAAC,GAxCQZ,IAAI;AAAA,KAAJA,IAAI;AA0Cb,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}